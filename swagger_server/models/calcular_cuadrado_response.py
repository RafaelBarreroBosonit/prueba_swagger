# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models import CalcularCuadradoArray
from swagger_server.models.base_model_ import Model
from swagger_server import util


class CalcularCuadradoResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, resultados: List[CalcularCuadradoArray]=None, total: float=None):  # noqa: E501
        """CalcularCuadradoResponse - a model defined in Swagger

        :param resultados: The resultados of this CalcularCuadradoResponse.  # noqa: E501
        :type resultados: List[CalcularCuadradoArray]
        :param total: The total of this CalcularCuadradoResponse.  # noqa: E501
        :type total: float
        """
        self.swagger_types = {
            'resultados': List[CalcularCuadradoArray],
            'total': float
        }

        self.attribute_map = {
            'resultados': 'resultados',
            'total': 'total'
        }

        self._resultados = resultados
        self._total = total

    @classmethod
    def from_dict(cls, dikt) -> 'CalcularCuadradoResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Calcular_cuadrado_response of this CalcularCuadradoResponse.  # noqa: E501
        :rtype: CalcularCuadradoResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resultados(self) -> List[CalcularCuadradoArray]:
        """Gets the resultados of this CalcularCuadradoResponse.


        :return: The resultados of this CalcularCuadradoResponse.
        :rtype: List[CalcularCuadradoArray]
        """
        return self._resultados

    @resultados.setter
    def resultados(self, resultados: List[CalcularCuadradoArray]):
        """Sets the resultados of this CalcularCuadradoResponse.


        :param resultados: The resultados of this CalcularCuadradoResponse.
        :type resultados: List[CalcularCuadradoArray]
        """

        self._resultados = resultados

    @property
    def total(self) -> float:
        """Gets the total of this CalcularCuadradoResponse.


        :return: The total of this CalcularCuadradoResponse.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total: float):
        """Sets the total of this CalcularCuadradoResponse.


        :param total: The total of this CalcularCuadradoResponse.
        :type total: float
        """

        self._total = total
