# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CalcularMediaPost(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, numeros: List[object]=None, redondear: bool=None):  # noqa: E501
        """CalcularMediaPost - a model defined in Swagger

        :param numeros: The numeros of this CalcularMediaPost.  # noqa: E501
        :type numeros: List[object]
        :param redondear: The redondear of this CalcularMediaPost.  # noqa: E501
        :type redondear: bool
        """
        self.swagger_types = {
            'numeros': List[object],
            'redondear': bool
        }

        self.attribute_map = {
            'numeros': 'numeros',
            'redondear': 'redondear'
        }

        self._numeros = numeros
        self._redondear = redondear

    @classmethod
    def from_dict(cls, dikt) -> 'CalcularMediaPost':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Calcular_media_post of this CalcularMediaPost.  # noqa: E501
        :rtype: CalcularMediaPost
        """
        return util.deserialize_model(dikt, cls)

    @property
    def numeros(self) -> List[object]:
        """Gets the numeros of this CalcularMediaPost.


        :return: The numeros of this CalcularMediaPost.
        :rtype: List[object]
        """
        return self._numeros

    @numeros.setter
    def numeros(self, numeros: List[object]):
        """Sets the numeros of this CalcularMediaPost.


        :param numeros: The numeros of this CalcularMediaPost.
        :type numeros: List[object]
        """
        if numeros is None:
            raise ValueError("Invalid value for `numeros`, must not be `None`")  # noqa: E501

        self._numeros = numeros

    @property
    def redondear(self) -> bool:
        """Gets the redondear of this CalcularMediaPost.


        :return: The redondear of this CalcularMediaPost.
        :rtype: bool
        """
        return self._redondear

    @redondear.setter
    def redondear(self, redondear: bool):
        """Sets the redondear of this CalcularMediaPost.


        :param redondear: The redondear of this CalcularMediaPost.
        :type redondear: bool
        """
        if redondear is None:
            raise ValueError("Invalid value for `redondear`, must not be `None`")  # noqa: E501

        self._redondear = redondear
